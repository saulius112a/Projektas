@model Eshop.Data.Models.ProductModel
@{
    ViewBag.Title = "Kurti";
}
<h2>Kurti</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <fieldset>
        <h4>Kategorija: @Html.DisplayFor(model=> model.Category.Name)</h4>
        <legend>Produkto detalės</legend>
        <hr />
        @Html.HiddenFor(model=>model.CategoryId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Pavadinimas</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Aprašymas</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Svoris</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Produkto kodas</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Kaina</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Spalva</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="ParentId">Gamintojas</label>
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.ManufacturerId,
         (IEnumerable<SelectListItem>)ViewBag.ManufacturerId,
         new
         {
             @class = "selectpicker",
             @Value = @Model.ManufacturerId,
             //onchange = "this.form.submit();",
             data_show_subtext = "true",
             data_live_search = "true"
         })
            </div>
        </div>
</fieldset>
    <fieldset>
            <legend>Atributai</legend>
            <div class="form-group">
                @if (Model.Category.Attributes != null || Model.Category.Attributes.Count > 0)
                {
                    for (int i = 0; i < Model.Category.Attributes.Count; i++)
                    {
                        
                        if (Model.Category.Attributes[i].IsTrait)
                        {
                            <div class="form-group">
                                @Html.DisplayFor(model => Model.Category.Attributes[i].Name)
                                @Html.EditorFor(model => model.Attributes[i].TraitValue.Value, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Attributes[i].TraitValue.Value, "", new { @class = "text-danger" })
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.DisplayFor(model => Model.Category.Attributes[i].Name)
                                <div class="form-group">
                                    
                                    @Html.EditorFor(model => model.Attributes[i].Measurement.Value)
                                    @Html.ValidationMessageFor(model => model.Attributes[i].Measurement.Value, "", new { @class = "text-danger" })
                                    Vienetai
                                    @Html.EditorFor(model => model.Attributes[i].Measurement.Unit)
                                    @Html.ValidationMessageFor(model => model.Attributes[i].Measurement.Unit, "", new { @class = "text-danger" })
                                    
                                </div>
                            </div>
                        }
                    }
                }
             </div>
    </fieldset>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Sukurti" class="btn btn-default" />
        </div>
    </div>
    <script type="text/javascript">
        
    </script>
}
<div>
    @Html.ActionLink("Grįžti", "Index")
</div>
